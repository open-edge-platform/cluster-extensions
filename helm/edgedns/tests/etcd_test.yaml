# SPDX-FileCopyrightText: (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
suite: Test EdgeDNS Helm chart
templates:
  - etcd.yaml
release:
  name: my-release
tests:
  - it: should be a StatefulSet
    asserts:
      - isKind:
          of: StatefulSet
  - it: should have correct name
    asserts:
      - equal:
          path: metadata.name
          value: my-release-etcd-dns
  - it: should have correct labels
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: my-release
      - equal:
          path: metadata.labels["app.kubernetes.io/component"]
          value: etcd-dns
  - it: should have correct init container settings
    asserts:
      - isNotEmpty:
          path: spec.template.spec.initContainers[0]
      - isNotEmpty:
          path: spec.template.spec.initContainers[0].volumeMounts
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[0].name
          value: etcd-config
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[0].mountPath
          value: /home/etcd
      - equal:
          path: spec.template.spec.initContainers[0].env[0].name
          value: CLUSTER_SIZE
      - equal:
          path: spec.template.spec.initContainers[0].env[0].value
          value: "3"
      - equal:
          path: spec.template.spec.initContainers[0].env[1].name
          value: SET_NAME
      - equal:
          path: spec.template.spec.initContainers[0].env[1].value
          value: my-release-etcd-dns
  - it: should have correct container settings
    asserts:
      - isNotEmpty:
          path: spec.template.spec.containers[0]
      - isNotEmpty:
          path: spec.template.spec.containers[0].volumeMounts
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: datadir
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /var/run/etcd
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: edgedns-etcd-client-tls
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /certs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: etcd-config
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value: /home/etcd
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: ETCD_CONFIG_FILE
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: /home/etcd/etcd_config.yml
  - it: should have correct security context
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
  - it: should have correct ports exposed
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0]
          value:
            containerPort: 2379
            name: client
            protocol: TCP
      - equal:
          path: spec.template.spec.containers[0].ports[1]
          value:
            containerPort: 2380
            name: peer
            protocol: TCP
  - it: should have correct volume mounts
    asserts:
      - isNotEmpty:
          path: spec.template.spec.volumes
      - equal:
          path: spec.template.spec.volumes[0].name
          value: datadir
      - exists:
          path: spec.template.spec.volumes[0].emptyDir
      - equal:
          path: spec.template.spec.volumes[1].name
          value: etcd-config
      - exists:
          path: spec.template.spec.volumes[1].emptyDir
      - equal:
          path: spec.template.spec.volumes[2].name
          value: edgedns-etcd-client-tls
      - equal:
          path: spec.template.spec.volumes[2].secret.secretName
          value: edgedns-etcd-client-tls
